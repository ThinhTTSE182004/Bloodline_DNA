name: CI Pipeline

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          SA_PASSWORD: "12345"
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433
    steps:
      - uses: actions/checkout@v3

      # Backend: .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore ./DNA_Blood_API/DNA_API1.csproj

      - name: Build backend
        run: dotnet build --no-restore ./DNA_Blood_API/DNA_API1.csproj

      - name: Set connection string for CI
        run: |
          echo "ConnectionStrings__Default=Server=localhost,1433;Database=Bloodline_DNA;User Id=sa;Password=Your_password123;" >> $GITHUB_ENV

      - name: Run backend (background)
        run: dotnet run --project ./DNA_Blood_API/DNA_API1.csproj &

      - name: Wait for API to be ready
        run: sleep 15

      # Frontend: React
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install frontend dependencies
        working-directory: ./DNA_Blood_Front_End
        run: npm install

      - name: Build frontend
        working-directory: ./DNA_Blood_Front_End
        run: npm run build

      # (Tùy chọn) Chạy test backend (nếu có)
      # - name: Run backend tests
      #   run: dotnet test ./DNA_Blood_API/DNA_API1.csproj

      # (Tùy chọn) Chạy test frontend (nếu có)
      # - name: Run frontend tests
      #   working-directory: ./DNA_Blood_Front_End
      #   run: npm test -- --watchAll=false

  run-testimio-cli:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install frontend dependencies
        working-directory: ./DNA_Blood_Front_End
        run: npm ci

      - name: Run frontend (background)
        working-directory: ./DNA_Blood_Front_End
        run: npm run dev &

      - name: Wait for frontend to be ready
        run: sleep 10

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Download cloudflared
        run: |
          wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
          sudo dpkg -i cloudflared-linux-amd64.deb

      - name: Start Cloudflare Tunnel for frontend
        run: |
          cloudflared tunnel --url http://localhost:3000 --no-autoupdate > cloudflared-frontend.log 2>&1 &
          sleep 5

      - name: Start Cloudflare Tunnel for backend
        run: |
          cloudflared tunnel --url http://localhost:7113 --no-autoupdate > cloudflared-backend.log 2>&1 &
          sleep 5

      - name: Get Cloudflare Tunnel public URLs
        id: cftunnel
        run: |
          FRONTEND_URL=$(grep -o 'https://[-a-zA-Z0-9.]*trycloudflare.com' cloudflared-frontend.log | head -n 1)
          BACKEND_URL=$(grep -o 'https://[-a-zA-Z0-9.]*trycloudflare.com' cloudflared-backend.log | head -n 1)
          echo "FRONTEND_URL=$FRONTEND_URL" >> $GITHUB_ENV
          echo "BACKEND_URL=$BACKEND_URL" >> $GITHUB_ENV
          echo "Frontend: $FRONTEND_URL"
          echo "Backend: $BACKEND_URL"

      - name: Update API URL in frontend (auto-replace localhost)
        working-directory: ./DNA_Blood_Front_End
        run: |
          sed -i "s|https://localhost:7113|${{ env.BACKEND_URL }}|g" src/pages/Login.jsx
          sed -i "s|https://localhost:7113|${{ env.BACKEND_URL }}|g" src/context/ServiceContext.jsx

      - name: Install Testim CLI and run tests
        run: |
          npm install -g @testim/testim-cli
          testim --token "MUqxr856TYHkd5h8sBwVfE0AWkqAkqffYDAYr5gkWDM6WJWzVO" \
            --project "usw2Hv47iAP5a1HTHAIn9tCa" \
            --base-url ${{ env.FRONTEND_URL }} \
            --grid "Testim-Grid" \
            --mode "extension" \
            --branch "master"
